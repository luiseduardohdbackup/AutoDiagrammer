<Window x:Class="AutoDiagrammer.SettingsWindowPopup"
		xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
		xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
		xmlns:local="clr-namespace:AutoDiagrammer"
        xmlns:sys="clr-namespace:System;assembly=mscorlib" 
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        xmlns:CinchV2="clr-namespace:Cinch;assembly=Cinch.WPF"
 		Title="SettingsWindow" Height="500" Width="700"
		WindowStartupLocation="CenterScreen"
		MinHeight="400" MinWidth="600"
		Background="#ffDDDDDD"
		WindowStyle="ToolWindow">
	<Window.Resources>

        <ObjectDataProvider x:Key="accessModifierTypesData"
                            MethodName="GetValues" 
                            ObjectType="{x:Type sys:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="local:AccessModifierTypes" />
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>


        <local:EnumToFriendlyNameConverter x:Key="enumItemsConverter"/>



        <Style x:Key="ExpanderDownHeaderStyle" TargetType="{x:Type ToggleButton}">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type ToggleButton}">
						<Border Padding="0" Background="SteelBlue" Margin="0" MinHeight="35" Height="35" >
							<Grid Background="SteelBlue" SnapsToDevicePixels="False">
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="auto"/>
									<ColumnDefinition Width="*"/>
									<ColumnDefinition Width="auto"/>
								</Grid.ColumnDefinitions>
								<Grid Margin="5,0,0,0">
									<Ellipse x:Name="circle" HorizontalAlignment="Center" Height="19" 
											 Stroke="Black" Fill="#ffdddddd"  VerticalAlignment="Center" Width="19"/>
									<Path x:Name="arrow" Data="M 1,1.5 L 4.5,5 L 8,1.5" 
										  HorizontalAlignment="Center" SnapsToDevicePixels="false" 
										  Stroke="Black" StrokeThickness="2" VerticalAlignment="Center"/>
								</Grid>
								<ContentPresenter Grid.Column="1" HorizontalAlignment="Left" Margin="10,0,0,0" 
												  RecognizesAccessKey="True" SnapsToDevicePixels="True" 
												  Content="{TemplateBinding Content}"
												  VerticalAlignment="Center" 
												  TextElement.Foreground="#ffdddddd"
												  TextElement.FontSize="12" TextElement.FontFamily="Verdana" 
												  TextElement.FontWeight="Bold"/>
								<ContentPresenter Grid.Column="2" HorizontalAlignment="Right" Margin="0,0,4,0" 
												  RecognizesAccessKey="True" SnapsToDevicePixels="True" 
												  VerticalAlignment="Center" Content="{Binding Path=HeaderContentControl, RelativeSource={RelativeSource AncestorType={x:Type local:ExpanderWithControlsInHeader}}}"/>
							</Grid>
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsChecked" Value="true">
								<Setter Property="Data" TargetName="arrow" Value="M 1,4.5  L 4.5,1  L 8,4.5"/>
							</Trigger>
							<Trigger Property="IsMouseOver" Value="true">
								<Setter Property="Stroke" TargetName="circle" Value="SteelBlue"/>
								<Setter Property="Stroke" TargetName="arrow" Value="SteelBlue"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>


		<Style x:Key="expanderWithHeaderStyle" TargetType="{x:Type local:ExpanderWithControlsInHeader}">
			<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
			<Setter Property="Background" Value="White"/>
			<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
			<Setter Property="VerticalContentAlignment" Value="Stretch"/>
			<Setter Property="Margin" Value="0"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Expander}">
						<DockPanel>
							<ToggleButton x:Name="HeaderSite" ContentTemplate="{TemplateBinding HeaderTemplate}" ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}" Content="{TemplateBinding Header}" DockPanel.Dock="Top" Foreground="{TemplateBinding Foreground}" FontWeight="{TemplateBinding FontWeight}" 
								FocusVisualStyle="{x:Null}" FontStyle="{TemplateBinding FontStyle}" FontStretch="{TemplateBinding FontStretch}" FontSize="{TemplateBinding FontSize}" FontFamily="{TemplateBinding FontFamily}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" 
											IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="0" MinWidth="0" MinHeight="0" Padding="0" Style="{StaticResource ExpanderDownHeaderStyle}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
							<ContentPresenter x:Name="ExpandSite" DockPanel.Dock="Bottom" 
											  Focusable="false" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" Visibility="Collapsed" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
						</DockPanel>
						<ControlTemplate.Triggers>
							<Trigger Property="IsExpanded" Value="true">
								<Setter Property="Visibility" TargetName="ExpandSite" Value="Visible"/>
							</Trigger>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
	</Window.Resources>

	<ScrollViewer HorizontalScrollBarVisibility="Hidden"
				  VerticalScrollBarVisibility="Auto"
				  Background="#ffDDDDDD">

		<StackPanel Orientation="Vertical">


			<local:ExpanderWithControlsInHeader Header="Graph Layout Algorithm Settings" Style="{DynamicResource expanderWithHeaderStyle}">
				<local:ExpanderWithControlsInHeader.HeaderContentControl>
						<StackPanel Orientation="Horizontal" 
								HorizontalAlignment="Stretch" Margin="0">
							<Label VerticalAlignment="Center" VerticalContentAlignment="Center" Foreground="#ffdddddd"
								FontSize="10" FontFamily="Verdana" FontWeight="Bold" Margin="0,0,0,0"  
								Content="Pick Layout Type"/>
							<ComboBox ItemsSource="{Binding LayoutAlgorithmTypes}" 
								SelectedItem="{Binding Path=LayoutAlgorithmType, Mode=TwoWay}"
								Width="150" Height="25" Margin="5" />

							<Button Tag="../Images/relayout.png" Style="{StaticResource SimpleImageButtonStyle}" 
									ToolTip="Re-Layout Graph"  Width="25" Height="25" Margin="5" 
									Command="{Binding ReLayoutCommand}"/>
						</StackPanel>
				</local:ExpanderWithControlsInHeader.HeaderContentControl>


				<Grid Margin="5">
					<Grid.RowDefinitions>
						<RowDefinition Height="Auto"/>
						<RowDefinition Height="Auto"/>
					</Grid.RowDefinitions>



					<ContentControl Grid.Row="0" Content="{Binding LayoutParameters}" />
					<ContentControl  Grid.Row="1" Content="{Binding OverlapRemovalParameters}" />
				</Grid>
			</local:ExpanderWithControlsInHeader>


			<local:ExpanderWithControlsInHeader Header="General Graph Settings" IsExpanded="True"
												Style="{DynamicResource expanderWithHeaderStyle}">

				<Grid>
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="300" />
						<ColumnDefinition />
					</Grid.ColumnDefinitions>

					<Grid.RowDefinitions>
						<RowDefinition />
						<RowDefinition />
						<RowDefinition />
						<RowDefinition />
						<RowDefinition />
						<RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />           
                        <RowDefinition />                        
                    </Grid.RowDefinitions>

                    <Label Grid.Column="0" Grid.ColumnSpan="2"  Grid.Row="0"  FontSize="12" FontWeight="Bold"
						   Content="Graph Specific Settings" HorizontalAlignment="Stretch" Background="LightGray"/>

                    <Label Grid.Column="0" Grid.Row="1" 
						   Content="Should relayout on Expand/Collapse"/>
					<CheckBox Grid.Column="1" Grid.Row="1" 
						   VerticalAlignment="Center"
						   IsChecked="{Binding ShouldRelayoutOnExpandCollapse}"/>

                    
                    <Label Grid.Column="0" Grid.ColumnSpan="2"  Grid.Row="2"  FontSize="12" FontWeight="Bold"
						   Content="Class Item Settings" HorizontalAlignment="Stretch" Background="LightGray"/>                    
                    
                    <Label Grid.Column="0" Grid.Row="3" 
						   Content="Show interfaces"/>
                    <CheckBox Grid.Column="1" Grid.Row="3" 
						   VerticalAlignment="Center"
						   IsChecked="{Binding ShowInterfaces }"/>

                    <Label Grid.Column="0" Grid.Row="4" 
						   Content="Show Constructor Parameters"/>
                    <CheckBox Grid.Column="1" Grid.Row="4" 
						   VerticalAlignment="Center"
						   IsChecked="{Binding ShowConstructorParameters}"/>

                    <Label Grid.Column="0" Grid.Row="5" 
						   Content="Show Field Types"/>
                    <CheckBox Grid.Column="1" Grid.Row="5" 
						   VerticalAlignment="Center"
						   IsChecked="{Binding ShowFieldTypes}"/>

                    <Label Grid.Column="0" Grid.Row="6" 
						   Content="Show Property Types"/>
                    <CheckBox Grid.Column="1" Grid.Row="6" 
						   VerticalAlignment="Center"
						   IsChecked="{Binding ShowPropertyTypes}"/>

                    <Label Grid.Column="0" Grid.Row="7" 
						   Content="Show Events"/>
                    <CheckBox Grid.Column="1" Grid.Row="7" 
						   VerticalAlignment="Center"
						   IsChecked="{Binding ShowEvents}"/>

                    <Label Grid.Column="0" Grid.Row="8" 
						   Content="Show Enums"/>
                    <CheckBox Grid.Column="1" Grid.Row="8" 
						   VerticalAlignment="Center"
						   IsChecked="{Binding ShowEnums}"/>

                    <Label Grid.Column="0" Grid.Row="9" 
						   Content="Parse method body IL"/>
                    <CheckBox Grid.Column="1" Grid.Row="9" 
						   VerticalAlignment="Center"
						   IsChecked="{Binding ParseMethodBodyIL}"/>

                    <Label Grid.Column="0" Grid.Row="10" 
						   Content="Show method arguments"/>
                    <CheckBox Grid.Column="1" Grid.Row="10" 
						   VerticalAlignment="Center"
						   IsChecked="{Binding ShowMethodArguments}"/>


                    <Label Grid.Column="0" Grid.Row="11" 
						   Content="Show method return values"/>
                    <CheckBox Grid.Column="1" Grid.Row="11" 
						   VerticalAlignment="Center"
						   IsChecked="{Binding ShowMethodReturnValues}"/>

                    <Label Grid.Column="0" Grid.Row="12" 
						   Content="Show Get Method For Properties"/>
                    <CheckBox Grid.Column="1" Grid.Row="12" 
						   VerticalAlignment="Center"
						   IsChecked="{Binding ShowGetMethodForProperty}"/>

                    <Label Grid.Column="0" Grid.Row="13" 
						   Content="Show Set Method For Properties"/>
                    <CheckBox Grid.Column="1" Grid.Row="13" 
						   VerticalAlignment="Center"
						   IsChecked="{Binding ShowSetMethodForProperty}"/>

                    <Label Grid.Column="0" Grid.Row="14" 
						   Content="Pick Access Modifier For Diagram Types To Include"/>

                    <ComboBox Grid.Column="1" Grid.Row="14" Width="150" Height="20"
                            HorizontalAlignment="Left"
                            ItemsSource="{Binding Source={StaticResource accessModifierTypesData}}"
                            SelectedItem="{Binding Path=ShowAccessModifierType, Mode=TwoWay}">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <Label  Content="{Binding Path=.,Mode=OneWay, 
                                            Converter={StaticResource enumItemsConverter}}"
                                        Height="Auto"
                                        Margin="0" 
                                        Padding="0"
                                        VerticalAlignment="Center"/>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>





                    <Label Grid.Column="0" Grid.Row="15" 
						   Content="Dll/Exe Loading TimeOut In Seconds"/>
                    <TextBox Grid.Column="1" Grid.Row="15" Width="150" Height="20"
                           HorizontalAlignment="Left"
						   VerticalAlignment="Center"
                           Style="{StaticResource ValidatingTextBox}"
						   Text="{Binding DllLoadingTimeOutInSeconds, ValidatesOnDataErrors=True, ValidatesOnExceptions=True}">
                        <i:Interaction.Behaviors>
                            <CinchV2:NumericTextBoxBehaviour/>
                        </i:Interaction.Behaviors>
                    </TextBox>


                    <Label Grid.Column="0" Grid.Row="16" 
						   Content="Graph Drawing TimeOut In Seconds"/>
                    <TextBox Grid.Column="1" Grid.Row="16" Width="150" Height="20"
                           HorizontalAlignment="Left"
						   VerticalAlignment="Center"
                           Style="{StaticResource ValidatingTextBox}"
						   Text="{Binding GraphDrawingTimeOutInSeconds, ValidatesOnDataErrors=True, ValidatesOnExceptions=True}">
                        <i:Interaction.Behaviors>
                            <CinchV2:NumericTextBoxBehaviour/>
                        </i:Interaction.Behaviors>
                    </TextBox>

                    <Label Grid.Column="0" Grid.Row="17" 
						   Content="Maximum number of classes to allow on diagram"/>
                    <TextBox Grid.Column="1" Grid.Row="17" Width="150" Height="20"
                           HorizontalAlignment="Left"
						   VerticalAlignment="Center"
                           Style="{StaticResource ValidatingTextBox}"
						   Text="{Binding MaximumNumberOfClassesToAllowOnDiagram, ValidatesOnDataErrors=True, ValidatesOnExceptions=True}">
                        <i:Interaction.Behaviors>
                            <CinchV2:NumericTextBoxBehaviour/>
                        </i:Interaction.Behaviors>
                    </TextBox>


                    <Label Grid.Column="0" Grid.Row="18" 
						   Content="Include Constructor Parameters As Associations"/>
                    <CheckBox Grid.Column="1" Grid.Row="18" 
						   VerticalAlignment="Center"
						   IsChecked="{Binding IncludeConstructorParametersAsAssociations}"/>


                    <Label Grid.Column="0" Grid.Row="19" 
						   Content="Include Property Types As Associations"/>
                    <CheckBox Grid.Column="1" Grid.Row="19" 
						   VerticalAlignment="Center"
						   IsChecked="{Binding IncludePropertyTypesAsAssociations}"/>

                    <Label Grid.Column="0" Grid.Row="20" 
						   Content="Include Field Types As Associations"/>
                    <CheckBox Grid.Column="1" Grid.Row="20" 
						   VerticalAlignment="Center"
						   IsChecked="{Binding IncludeFieldTypesAsAssociations}"/>                    

                    <Label Grid.Column="0" Grid.Row="21" 
						   Content="Include Method Arguments As Associations"/>
                    <CheckBox Grid.Column="1" Grid.Row="21" 
						   VerticalAlignment="Center"
						   IsChecked="{Binding IncludeMethodArgumentAsAssociations}"/> 

                </Grid>


			</local:ExpanderWithControlsInHeader>

		</StackPanel>

	</ScrollViewer>
</Window>
